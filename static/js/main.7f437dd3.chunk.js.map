{"version":3,"sources":["components/Header.js","components/Footer.js","components/Product.js","components/Products.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","src","alt","width","height","role","aria-label","aria-expanded","aria-hidden","Footer","Product","props","image","name","brand","products","Products","map","item","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wOA4BeA,MA1Bf,WACE,OACE,4BAAQC,UAAU,+BAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,cAAcC,KAAK,KAC9B,yBAAKC,IAAI,yCAAyCC,IAAI,OAAOC,MAAM,MAAMC,OAAO,QAElF,uBAAGC,KAAK,SAASN,UAAU,gBAAgBO,aAAW,OAAOC,gBAAc,SACzE,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAGtB,yBAAKT,UAAU,eACb,yBAAKA,UAAU,cACb,uBAAGC,KAAK,IAAID,UAAU,eAAtB,SACA,uBAAGC,KAAK,IAAID,UAAU,eAAtB,WACA,uBAAGC,KAAK,IAAID,UAAU,eAAtB,aCJGU,MAdf,WACE,OACE,4BAAQV,UAAU,UAChB,yBAAKA,UAAU,6BACb,2BACE,yCADF,OAC4B,uBAAGC,KAAK,sBAAR,iBAD5B,gCAEE,uBAAGA,KAAK,kDAAR,OAFF,qCAGc,uBAAGA,KAAK,qDAAR,mBAHd,QCUOU,MAdf,SAAiBC,GACf,OACE,yBAAKZ,UAAU,yBACb,yBAAKA,UAAU,gDACb,4BAAQA,UAAU,mBAChB,yBAAKE,IAAK,UAAYU,EAAMC,MAAOV,IAAI,MAEzC,wBAAIH,UAAU,4BAA6BY,EAAME,MACjD,uBAAGd,UAAU,sBAAuBY,EAAMG,UCP5CC,EAAW,CAAC,CACJ,MAAS,mBACT,KAAQ,gCACR,MAAS,UAEX,CACE,MAAS,mBACT,KAAQ,+BACR,MAAS,UAEX,CACE,MAAS,mBACT,KAAQ,0BACR,MAAS,UAEX,CACE,MAAS,mBACT,KAAQ,6BACR,MAAS,UAEX,CACE,MAAS,mBACT,KAAQ,8BACR,MAAS,UAEX,CACE,MAAS,mBACT,KAAQ,yCACR,MAAS,WAiBRC,MAdf,WACE,OACE,yBAAKjB,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACdgB,EAASE,KAAI,SAAAC,GAAI,OAChB,kBAAC,EAAD,CAASC,IAAKD,EAAKN,MAAOA,MAAOM,EAAKN,MAAOC,KAAMK,EAAKL,KAAMC,MAAOI,EAAKJ,eCvBrEM,MAVf,WACE,OACE,yBAAKrB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAcsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7f437dd3.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n  return (\n    <header className='navbar has-background-light'>\n      <nav className=\"container\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"logo\" width=\"112\" height=\"28\" />\n          </a>\n          <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n        <div className='navbar-menu'>\n          <div className='navbar-end'>\n            <a href=\"/\" className=\"navbar-item\">About</a>\n            <a href=\"/\" className=\"navbar-item\">Contact</a>\n            <a href=\"/\" className=\"navbar-item\">More</a>\n          </div>\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n          <strong>Bulma</strong> by <a href=\"https://jgthms.com\">Jeremy Thomas</a>. The source code is licensed\n          <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>. The website content\n          is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY NC SA 4.0</a>.\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react'\n\nfunction Product(props) {\n  return (\n    <div className=\"column is-6 py-2 px-2\">\n      <div className=\"box has-background-primary has-text-centered\">\n        <figure className=\"image is-square\">\n          <img src={\"images/\" + props.image} alt=\"\"/>\n        </figure>\n        <h6 className=\"has-text-dark title is-6\">{ props.name }</h6>\n        <p className=\"subtitle is-size-6\">{ props.brand }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Product;","import React from 'react'\nimport Product from './Product'\n\nconst products = [{\n              \"image\": \"bq3381-800-a.png\",\n              \"name\": \"Air Jordan XXXIV 'Amber Rise'\",\n              \"brand\": \"Jordan\"\n            },\n            {\n              \"image\": \"bq3381-003-a.png\",\n              \"name\": \"Air Jordan XXXIV 'Black Cat'\",\n              \"brand\": \"Jordan\"\n            },\n            {\n              \"image\": \"bq3381-100-a.png\",\n              \"name\": \"Air Jordan XXXIV 'Bred'\",\n              \"brand\": \"Jordan\"\n            },\n            {\n              \"image\": \"bq3381-001-a.png\",\n              \"name\": \"Air Jordan XXXIV 'Eclipse'\",\n              \"brand\": \"Jordan\"\n            },\n            {\n              \"image\": \"bq3381-600-a.png\",\n              \"name\": \"Air Jordan XXXIV 'Infrared'\",\n              \"brand\": \"Jordan\"\n            },\n            {\n              \"image\": \"cu3475-100-a.png\",\n              \"name\": \"Air Jordan XXXIV Low PF 'Crispy White'\",\n              \"brand\": \"Jordan\"\n            }];\n\nfunction Products() {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className=\"columns is-mobile is-multiline\">\n        {products.map(item => (\n          <Product key={item.image} image={item.image} name={item.name} brand={item.brand}/>\n        ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Products;","import React from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Products from './components/Products'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Products />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}